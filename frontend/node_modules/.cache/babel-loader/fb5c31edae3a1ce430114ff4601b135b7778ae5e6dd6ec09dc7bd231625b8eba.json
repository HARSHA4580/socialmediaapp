{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARSHA VARDHAN\\\\OneDrive\\\\Desktop\\\\microblogging\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { API } from '../api';\nimport Post from '../components/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home({\n  user\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [content, setContent] = useState('');\n  const fetchPosts = async () => {\n    const res = await API.get('/posts');\n    setPosts(res.data.reverse()); // latest first\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const createPost = async () => {\n    if (!user) return alert(\"Login first\");\n    if (content.trim() === \"\") return;\n    await API.post('/posts', {\n      userId: user._id,\n      content\n    });\n    setContent('');\n    fetchPosts();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [user && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"What's on your mind?\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createPost,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      user: user,\n      refreshPosts: fetchPosts\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"Fz6jb3z6FDAyaXrNf8bhSJO+T6s=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","API","Post","jsxDEV","_jsxDEV","Home","user","_s","posts","setPosts","content","setContent","fetchPosts","res","get","data","reverse","createPost","alert","trim","post","userId","_id","style","padding","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","refreshPosts","_c","$RefreshReg$"],"sources":["C:/Users/HARSHA VARDHAN/OneDrive/Desktop/microblogging/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { API } from '../api';\r\nimport Post from '../components/Post';\r\n\r\nfunction Home({ user }) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [content, setContent] = useState('');\r\n\r\n  const fetchPosts = async () => {\r\n    const res = await API.get('/posts');\r\n    setPosts(res.data.reverse()); // latest first\r\n  };\r\n\r\n  useEffect(() => { fetchPosts(); }, []);\r\n\r\n  const createPost = async () => {\r\n    if(!user) return alert(\"Login first\");\r\n    if(content.trim() === \"\") return;\r\n    await API.post('/posts', { userId: user._id, content });\r\n    setContent('');\r\n    fetchPosts();\r\n  };\r\n\r\n  return (\r\n    <div style={{padding:'20px'}}>\r\n      {user && (\r\n        <div>\r\n          <textarea placeholder=\"What's on your mind?\" value={content} onChange={e => setContent(e.target.value)} />\r\n          <br />\r\n          <button onClick={createPost}>Post</button>\r\n        </div>\r\n      )}\r\n      <h3>All Posts</h3>\r\n      {posts.map(post => (\r\n        <Post key={post._id} post={post} user={user} refreshPosts={fetchPosts} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,QAAQ;AAC5B,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,IAAIA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,GAAG,GAAG,MAAMZ,GAAG,CAACa,GAAG,CAAC,QAAQ,CAAC;IACnCL,QAAQ,CAACI,GAAG,CAACE,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAEDjB,SAAS,CAAC,MAAM;IAAEa,UAAU,CAAC,CAAC;EAAE,CAAC,EAAE,EAAE,CAAC;EAEtC,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAG,CAACX,IAAI,EAAE,OAAOY,KAAK,CAAC,aAAa,CAAC;IACrC,IAAGR,OAAO,CAACS,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC1B,MAAMlB,GAAG,CAACmB,IAAI,CAAC,QAAQ,EAAE;MAAEC,MAAM,EAAEf,IAAI,CAACgB,GAAG;MAAEZ;IAAQ,CAAC,CAAC;IACvDC,UAAU,CAAC,EAAE,CAAC;IACdC,UAAU,CAAC,CAAC;EACd,CAAC;EAED,oBACER,OAAA;IAAKmB,KAAK,EAAE;MAACC,OAAO,EAAC;IAAM,CAAE;IAAAC,QAAA,GAC1BnB,IAAI,iBACHF,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAUsB,WAAW,EAAC,sBAAsB;QAACC,KAAK,EAAEjB,OAAQ;QAACkB,QAAQ,EAAEC,CAAC,IAAIlB,UAAU,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1G9B,OAAA;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN9B,OAAA;QAAQ+B,OAAO,EAAElB,UAAW;QAAAQ,QAAA,EAAC;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CACN,eACD9B,OAAA;MAAAqB,QAAA,EAAI;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjB1B,KAAK,CAAC4B,GAAG,CAAChB,IAAI,iBACbhB,OAAA,CAACF,IAAI;MAAgBkB,IAAI,EAAEA,IAAK;MAACd,IAAI,EAAEA,IAAK;MAAC+B,YAAY,EAAEzB;IAAW,GAA3DQ,IAAI,CAACE,GAAG;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqD,CACzE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC3B,EAAA,CAlCQF,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AAoCb,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}