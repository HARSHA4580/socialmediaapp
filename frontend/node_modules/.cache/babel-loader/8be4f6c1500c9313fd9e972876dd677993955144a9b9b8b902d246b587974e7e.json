{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HARSHA VARDHAN\\\\OneDrive\\\\Desktop\\\\microblogging\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { API } from \"../api\";\nimport Post from \"../components/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home({\n  user\n}) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [content, setContent] = useState(\"\");\n  const fetchPosts = async () => {\n    try {\n      const res = await API.get(\"/posts\");\n      // populate user info for each post\n      const populatedPosts = await Promise.all(res.data.map(async p => {\n        if (p.userId) {\n          const userRes = await API.get(`/users/${p.userId}`);\n          p.user = userRes.data;\n        }\n        // populate comment users\n        p.comments = await Promise.all(p.comments.map(async c => {\n          if (c.userId) {\n            const userRes = await API.get(`/users/${c.userId}`);\n            c.user = userRes.data;\n          }\n          return c;\n        }));\n        return p;\n      }));\n      setPosts(populatedPosts.reverse());\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const createPost = async () => {\n    if (!user) return alert(\"Login first\");\n    if (!content.trim()) return;\n    await API.post(\"/posts\", {\n      userId: user._id,\n      content\n    });\n    setContent(\"\");\n    fetchPosts();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"60%\",\n      margin: \"20px auto\"\n    },\n    children: [user && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"What's on your mind?\",\n        value: content,\n        onChange: e => setContent(e.target.value),\n        style: {\n          width: \"100%\",\n          minHeight: \"60px\",\n          padding: \"10px\",\n          borderRadius: \"8px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createPost,\n        style: postBtnStyle,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      user: user,\n      refreshPosts: fetchPosts\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"InMBmuCPYHhyOWvcdxU9wmDkSXY=\");\n_c = Home;\nconst postBtnStyle = {\n  marginTop: \"5px\",\n  padding: \"8px 15px\",\n  background: \"#1976d2\",\n  color: \"white\",\n  border: \"none\",\n  borderRadius: \"5px\",\n  cursor: \"pointer\"\n};\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","API","Post","jsxDEV","_jsxDEV","Home","user","_s","posts","setPosts","content","setContent","fetchPosts","res","get","populatedPosts","Promise","all","data","map","p","userId","userRes","comments","c","reverse","err","console","error","createPost","alert","trim","post","_id","style","width","margin","children","marginBottom","placeholder","value","onChange","e","target","minHeight","padding","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","onClick","postBtnStyle","refreshPosts","_c","marginTop","background","color","border","cursor","$RefreshReg$"],"sources":["C:/Users/HARSHA VARDHAN/OneDrive/Desktop/microblogging/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { API } from \"../api\";\r\nimport Post from \"../components/Post\";\r\n\r\nfunction Home({ user }) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const res = await API.get(\"/posts\");\r\n      // populate user info for each post\r\n      const populatedPosts = await Promise.all(\r\n        res.data.map(async (p) => {\r\n          if (p.userId) {\r\n            const userRes = await API.get(`/users/${p.userId}`);\r\n            p.user = userRes.data;\r\n          }\r\n          // populate comment users\r\n          p.comments = await Promise.all(\r\n            p.comments.map(async (c) => {\r\n              if (c.userId) {\r\n                const userRes = await API.get(`/users/${c.userId}`);\r\n                c.user = userRes.data;\r\n              }\r\n              return c;\r\n            })\r\n          );\r\n          return p;\r\n        })\r\n      );\r\n      setPosts(populatedPosts.reverse());\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const createPost = async () => {\r\n    if (!user) return alert(\"Login first\");\r\n    if (!content.trim()) return;\r\n    await API.post(\"/posts\", { userId: user._id, content });\r\n    setContent(\"\");\r\n    fetchPosts();\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"60%\", margin: \"20px auto\" }}>\r\n      {user && (\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <textarea\r\n            placeholder=\"What's on your mind?\"\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            style={{ width: \"100%\", minHeight: \"60px\", padding: \"10px\", borderRadius: \"8px\" }}\r\n          />\r\n          <button onClick={createPost} style={postBtnStyle}>\r\n            Post\r\n          </button>\r\n        </div>\r\n      )}\r\n      <h3>All Posts</h3>\r\n      {posts.map((post) => (\r\n        <Post key={post._id} post={post} user={user} refreshPosts={fetchPosts} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst postBtnStyle = {\r\n  marginTop: \"5px\",\r\n  padding: \"8px 15px\",\r\n  background: \"#1976d2\",\r\n  color: \"white\",\r\n  border: \"none\",\r\n  borderRadius: \"5px\",\r\n  cursor: \"pointer\",\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,QAAQ;AAC5B,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,IAAIA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMZ,GAAG,CAACa,GAAG,CAAC,QAAQ,CAAC;MACnC;MACA,MAAMC,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CACtCJ,GAAG,CAACK,IAAI,CAACC,GAAG,CAAC,MAAOC,CAAC,IAAK;QACxB,IAAIA,CAAC,CAACC,MAAM,EAAE;UACZ,MAAMC,OAAO,GAAG,MAAMrB,GAAG,CAACa,GAAG,CAAC,UAAUM,CAAC,CAACC,MAAM,EAAE,CAAC;UACnDD,CAAC,CAACd,IAAI,GAAGgB,OAAO,CAACJ,IAAI;QACvB;QACA;QACAE,CAAC,CAACG,QAAQ,GAAG,MAAMP,OAAO,CAACC,GAAG,CAC5BG,CAAC,CAACG,QAAQ,CAACJ,GAAG,CAAC,MAAOK,CAAC,IAAK;UAC1B,IAAIA,CAAC,CAACH,MAAM,EAAE;YACZ,MAAMC,OAAO,GAAG,MAAMrB,GAAG,CAACa,GAAG,CAAC,UAAUU,CAAC,CAACH,MAAM,EAAE,CAAC;YACnDG,CAAC,CAAClB,IAAI,GAAGgB,OAAO,CAACJ,IAAI;UACvB;UACA,OAAOM,CAAC;QACV,CAAC,CACH,CAAC;QACD,OAAOJ,CAAC;MACV,CAAC,CACH,CAAC;MACDX,QAAQ,CAACM,cAAc,CAACU,OAAO,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED3B,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACvB,IAAI,EAAE,OAAOwB,KAAK,CAAC,aAAa,CAAC;IACtC,IAAI,CAACpB,OAAO,CAACqB,IAAI,CAAC,CAAC,EAAE;IACrB,MAAM9B,GAAG,CAAC+B,IAAI,CAAC,QAAQ,EAAE;MAAEX,MAAM,EAAEf,IAAI,CAAC2B,GAAG;MAAEvB;IAAQ,CAAC,CAAC;IACvDC,UAAU,CAAC,EAAE,CAAC;IACdC,UAAU,CAAC,CAAC;EACd,CAAC;EAED,oBACER,OAAA;IAAK8B,KAAK,EAAE;MAAEC,KAAK,EAAE,KAAK;MAAEC,MAAM,EAAE;IAAY,CAAE;IAAAC,QAAA,GAC/C/B,IAAI,iBACHF,OAAA;MAAK8B,KAAK,EAAE;QAAEI,YAAY,EAAE;MAAO,CAAE;MAAAD,QAAA,gBACnCjC,OAAA;QACEmC,WAAW,EAAC,sBAAsB;QAClCC,KAAK,EAAE9B,OAAQ;QACf+B,QAAQ,EAAGC,CAAC,IAAK/B,UAAU,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC5CN,KAAK,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAES,SAAS,EAAE,MAAM;UAAEC,OAAO,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAM;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC,eACF9C,OAAA;QAAQ+C,OAAO,EAAEtB,UAAW;QAACK,KAAK,EAAEkB,YAAa;QAAAf,QAAA,EAAC;MAElD;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,eACD9C,OAAA;MAAAiC,QAAA,EAAI;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjB1C,KAAK,CAACW,GAAG,CAAEa,IAAI,iBACd5B,OAAA,CAACF,IAAI;MAAgB8B,IAAI,EAAEA,IAAK;MAAC1B,IAAI,EAAEA,IAAK;MAAC+C,YAAY,EAAEzC;IAAW,GAA3DoB,IAAI,CAACC,GAAG;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqD,CACzE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC3C,EAAA,CAlEQF,IAAI;AAAAiD,EAAA,GAAJjD,IAAI;AAoEb,MAAM+C,YAAY,GAAG;EACnBG,SAAS,EAAE,KAAK;EAChBV,OAAO,EAAE,UAAU;EACnBW,UAAU,EAAE,SAAS;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,MAAM;EACdZ,YAAY,EAAE,KAAK;EACnBa,MAAM,EAAE;AACV,CAAC;AAED,eAAetD,IAAI;AAAC,IAAAiD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}